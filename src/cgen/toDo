* errors handling (in generating functions)
* ; at end of statments

* macro's
* loops

* rename statments to forms, make forms subclasses
* no generate-symbol in statments.lisp
* operations priority
* generate casts in c-style, not c++
* type-of form

* several languages (functions separated by packages, generators by *generator*)
* types subsystem
* printer subsystem
* symbol table subsystem
* name translator + way to define native names

* base generators
* generators for static and dynamic typed languages

---

* static typed language with generation to dynamic
* statments have values
* object system
* type inheritance